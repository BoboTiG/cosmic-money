#image: livexp/android-sdk
#
#variables:
#  GIT_SUBMODULE_STRATEGY: recursive
#
#stages:
#  - build
#
#before_script:
#    - docker-android-sdk-install "build-tools;28.0.3"
#    - cd /root/
#    - wget https://services.gradle.org/distributions/gradle-5.3-bin.zip > /dev/null 2>&1
#    - unzip gradle-5.3-bin.zip > /dev/null 2>&1
#    - cd -
#
#build_release_app:
#  stage: build
#  only:
#    refs:
#      - release
#  artifacts:
#    paths:
#      - app/build/outputs/apk/normal/release/app-normal-release-unsigned.apk
#  script:
#      - export PATH=/root/gradle-5.3/bin:$PATH
#      - pwd
#      - cd app ; gradle assembleNormal
#
#build_dev_app:
#  stage: build
#  only:
#    refs:
#      - build
#  artifacts:
#    paths:
#      - app/build/outputs/apk/dev/debug/app-dev-debug.apk
#  script:
#      - export PATH=/root/gradle-5.3/bin:$PATH
#      - pwd
#      - cd app ; gradle assembleDev

image: openjdk:8-jdk

variables:
  ANDROID_COMPILE_SDK: "28"
  ANDROID_BUILD_TOOLS: "28.0.3"
  ANDROID_SDK_TOOLS:   "4333796"
  GIT_SUBMODULE_STRATEGY: recursive

before_script:
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
  - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
  - unzip -q -d android-sdk-linux android-sdk.zip
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
  - export ANDROID_HOME=$PWD/android-sdk-linux
  - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
  - chmod +x ./gradlew
  # temporarily disable checking for EPIPE error and use yes to accept all licenses
  - set +o pipefail
  - yes | android-sdk-linux/tools/bin/sdkmanager --licenses >/dev/null
  - set -o pipefail

stages:
  - build
  - test

lintDebug:
  stage: build
  only:
    refs:
      - build
  script:
    - ./gradlew -Pci --console=plain :app:lintDevDebug -PbuildDir=lint

assembleDevDebug:
  stage: build
  only:
    refs:
      - build
  script:
    - ./gradlew assembleDevDebug
  artifacts:
    paths:
    - app/build/outputs/

assembleNormalRelease:
  stage: build
  only:
    refs:
      - release
  script:
    - ./gradlew assembleNormalRelease
  artifacts:
    paths:
    - app/build/outputs/

debugTests:
  stage: test
  only:
    refs:
      - build
  script:
    - ./gradlew -Pci --console=plain :app:testDevDebug

